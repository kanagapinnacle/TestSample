<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" total="21" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="DevTest" duration-ms="10738" started-at="2017-03-02T04:15:35Z" finished-at="2017-03-02T04:15:46Z">
    <groups>
    </groups>
    <test name="AvailabilityTest" duration-ms="10738" started-at="2017-03-02T04:15:35Z" finished-at="2017-03-02T04:15:46Z">
      <class name="com.example.tests.AvailabilityTest">
        <test-method status="PASS" signature="initFramework(java.lang.String, org.testng.ITestContext)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="initFramework" is-config="true" duration-ms="20" started-at="2017-03-01T23:15:35Z" finished-at="2017-03-01T23:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[dev.configuration.properties]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@3bffddff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initFramework -->
        <test-method status="PASS" signature="availabiltyJson()[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="availabiltyJson" duration-ms="7717" started-at="2017-03-01T23:15:35Z" finished-at="2017-03-01T23:15:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- availabiltyJson -->
        <test-method status="FAIL" signature="testOrder(java.lang.String, java.lang.String)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testOrder" duration-ms="464" started-at="2017-03-01T23:15:43Z" data-provider="orderIdDataProvider" finished-at="2017-03-01T23:15:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testorder1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Assertion Failed:Expecting response 200 , Response Code returned is: 404
 Petid : 1
testorder1 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Assertion Failed:Expecting response 200 , Response Code returned is: 404
 Petid : 1
testorder1 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at com.example.tests.AvailabilityTest.testOrder(AvailabilityTest.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrder -->
        <test-method status="PASS" signature="testOrder(java.lang.String, java.lang.String)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testOrder" duration-ms="427" started-at="2017-03-01T23:15:43Z" data-provider="orderIdDataProvider" finished-at="2017-03-01T23:15:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testorder2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrder -->
        <test-method status="PASS" signature="testOrder(java.lang.String, java.lang.String)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testOrder" duration-ms="156" started-at="2017-03-01T23:15:43Z" data-provider="orderIdDataProvider" finished-at="2017-03-01T23:15:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testorder3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrder -->
        <test-method status="PASS" signature="testOrder(java.lang.String, java.lang.String)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testOrder" duration-ms="150" started-at="2017-03-01T23:15:44Z" data-provider="orderIdDataProvider" finished-at="2017-03-01T23:15:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testorder4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrder -->
        <test-method status="PASS" signature="testPostOrder()[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPostOrder" duration-ms="199" started-at="2017-03-01T23:15:44Z" finished-at="2017-03-01T23:15:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostOrder -->
        <test-method status="PASS" signature="testPostPet()[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPostPet" duration-ms="155" started-at="2017-03-01T23:15:44Z" finished-at="2017-03-01T23:15:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostPet -->
        <test-method status="FAIL" signature="testPet(java.lang.Integer)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPet" duration-ms="130" started-at="2017-03-01T23:15:44Z" data-provider="petIdDataProvider" finished-at="2017-03-01T23:15:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Assertion Failed:Expecting response 200 , Response Code returned is: 404
 Petid : 2
 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Assertion Failed:Expecting response 200 , Response Code returned is: 404
 Petid : 2
 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at com.example.tests.AvailabilityTest.testPet(AvailabilityTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPet -->
        <test-method status="PASS" signature="testPet(java.lang.Integer)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPet" duration-ms="125" started-at="2017-03-01T23:15:44Z" data-provider="petIdDataProvider" finished-at="2017-03-01T23:15:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPet -->
        <test-method status="FAIL" signature="testPet(java.lang.Integer)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPet" duration-ms="119" started-at="2017-03-01T23:15:44Z" data-provider="petIdDataProvider" finished-at="2017-03-01T23:15:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Assertion Failed:Expecting response 200 , Response Code returned is: 404
 Petid : 4
 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Assertion Failed:Expecting response 200 , Response Code returned is: 404
 Petid : 4
 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at com.example.tests.AvailabilityTest.testPet(AvailabilityTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPet -->
        <test-method status="FAIL" signature="testPet(java.lang.Integer)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPet" duration-ms="136" started-at="2017-03-01T23:15:44Z" data-provider="petIdDataProvider" finished-at="2017-03-01T23:15:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Assertion Failed:Expecting response 200 , Response Code returned is: 404
 Petid : 5
 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Assertion Failed:Expecting response 200 , Response Code returned is: 404
 Petid : 5
 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at com.example.tests.AvailabilityTest.testPet(AvailabilityTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPet -->
        <test-method status="PASS" signature="testPet(java.lang.Integer)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPet" duration-ms="121" started-at="2017-03-01T23:15:45Z" data-provider="petIdDataProvider" finished-at="2017-03-01T23:15:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPet -->
        <test-method status="PASS" signature="testPet(java.lang.Integer)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPet" duration-ms="145" started-at="2017-03-01T23:15:45Z" data-provider="petIdDataProvider" finished-at="2017-03-01T23:15:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPet -->
        <test-method status="PASS" signature="testPet(java.lang.Integer)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPet" duration-ms="120" started-at="2017-03-01T23:15:45Z" data-provider="petIdDataProvider" finished-at="2017-03-01T23:15:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPet -->
        <test-method status="PASS" signature="testPet(java.lang.Integer)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPet" duration-ms="131" started-at="2017-03-01T23:15:45Z" data-provider="petIdDataProvider" finished-at="2017-03-01T23:15:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPet -->
        <test-method status="PASS" signature="testPet(java.lang.Integer)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPet" duration-ms="144" started-at="2017-03-01T23:15:45Z" data-provider="petIdDataProvider" finished-at="2017-03-01T23:15:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPet -->
        <test-method status="PASS" signature="testPet(java.lang.Integer)[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPet" duration-ms="122" started-at="2017-03-01T23:15:45Z" data-provider="petIdDataProvider" finished-at="2017-03-01T23:15:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPet -->
        <test-method status="PASS" signature="testGetOrder()[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testGetOrder" duration-ms="0" started-at="2017-03-01T23:15:45Z" depends-on-methods="com.example.tests.AvailabilityTest.testPostOrder" finished-at="2017-03-01T23:15:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrder -->
        <test-method status="PASS" signature="testPutPet()[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testPutPet" duration-ms="0" started-at="2017-03-01T23:15:45Z" depends-on-methods="com.example.tests.AvailabilityTest.testPostPet" finished-at="2017-03-01T23:15:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutPet -->
        <test-method status="PASS" signature="testGetPet()[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testGetPet" duration-ms="0" started-at="2017-03-01T23:15:45Z" depends-on-methods="com.example.tests.AvailabilityTest.testPutPet" finished-at="2017-03-01T23:15:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPet -->
        <test-method status="PASS" signature="testDeletePet()[pri:0, instance:com.example.tests.AvailabilityTest@5e853265]" name="testDeletePet" duration-ms="129" started-at="2017-03-01T23:15:45Z" depends-on-methods="com.example.tests.AvailabilityTest.testGetPet" finished-at="2017-03-01T23:15:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletePet -->
      </class> <!-- com.example.tests.AvailabilityTest -->
    </test> <!-- AvailabilityTest -->
  </suite> <!-- DevTest -->
</testng-results>
